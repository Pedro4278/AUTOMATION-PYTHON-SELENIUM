import pyautogui
from selenium import webdriver
from selenium.webdriver.chrome.service import Service as ChromeService
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
import PySimpleGUI as sg
import time
import keyboard
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import NoSuchElementException





def iniciar_driver():
    chrome_options=Options()
    #trabalhar com tela abaixada
    #chrome_options.add_argument("--headless")

    #INICIA O CHROME COM OS COKIES SALVOS!!
    chrome_options.add_argument("user-data-dir=C:\\Users\\vilma\\AppData\\Local\\Google\\Chrome\\User Data\\Default")

    driver_path = 'C:\\Users\\vilma\\OneDrive\\Área de Trabalho\\webdriver\\chromedriver' # Substitua pelo caminho correto do chromedriver.exe

    service = webdriver.chrome.service.Service(driver_path)
    service.start()


    arguments=['--lang=ptBR','--start-maximize']
    for argument in arguments:
        chrome_options.add_experimental_option('prefs',{
            'download_prompt_for_download':False,
            'profile.default_content_setting_values.notifications':2,
            'profile.default_content_setting_values.automatic_dowloads':1
        })

    driver=webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()),options=chrome_options)
    return driver


def espere_e_clique(driver, by, locator, timeout=120):
    wait = WebDriverWait(driver, timeout)
    button = wait.until(EC.element_to_be_clickable((by, locator)))
    button.click()


def aguardar_carregar(driver,by,locator,timeout=30):
   aguarde=WebDriverWait(driver,timeout)
   até=aguarde.until(EC.element_to_be_clickable((by, locator)))




#iniciar imobzi com webdriver

layout=[
    [sg.Text('Olá, insira o seu login e senha do Imobzi')],
    [sg.Text('Login')],
    [sg.InputText(key='email')],
    [sg.Text('Senha')],
    [sg.InputText(key='senha',password_char='*')],
    [sg.Button('ok'), sg.Button('cancelar')],
    ]


janela=sg.Window('Login Automação',layout)

while True:
    evento,valores=janela.read()

    #driver.get('https://web.whatsapp.com/')
    #time.sleep(120)

    def ok():
     evento == 'ok'

    keyboard.add_hotkey('enter',ok)   
      


    if evento == sg.WIN_CLOSED:
        break

    if evento == 'cancelar':
       break

    if evento == 'ok':
        janela.close()
        driver=iniciar_driver()
        time.sleep(3)
        driver.get('https://my.imobzi.com/index.html#/home')
        time.sleep(3)
        

        email=valores['email']
        senha=valores['senha']
       
       #caso o imobzi não esteja logado
        try:
            campocad = driver.find_element(By.ID, 'email')
            camposenh = driver.find_element(By.ID, 'password')
            botaoentrar = driver.find_element(By.XPATH, "//span[contains(text(),'ENTRAR')]")

            if campocad.is_enabled() and camposenh.is_enabled() and botaoentrar.is_enabled():
                print('Campo e-mail encontrado')
                campocad.send_keys(email)
                camposenh.send_keys(senha)
                print('Encontrei botão')
                botaoentrar.click()
                time.sleep(5)

        except NoSuchElementException:
            pass


        time.sleep(3)
         #clicar dinheiro 
        espere_e_clique(driver,By.XPATH,"/html/body/ion-app/ng-component/ion-split-pane/ion-menu/div/ion-content/div[2]/ul/li[6]/div/div/button")
                
        #abrir menu
        espere_e_clique(driver,By.XPATH,"/html/body/ion-app/ng-component/ion-split-pane/ion-nav/page-deals/ion-header/ion-navbar/div[2]/div")
        print('encontrei o menu')
        
        # selecionar locação
        espere_e_clique(driver,By.XPATH,"/html/body/ion-app/ion-popover/div/div[2]/div/menu-popover/ion-list/div[1]/div") 
        time.sleep(3)
        
        #laço de repetição, lembre-se de conectar a variavel total a um input na interface para o usuario decidir quantas mensagens deseja enviar
        total=2
        for c in range (total):
            #rolar até o contato desejado        
            contato=aguardar_carregar(driver,By.XPATH,"//ion-item[starts-with(@class, 'deal-item')]")
            time.sleep(5)
            elemento = driver.find_element(By.XPATH, "//div[starts-with(@class,'deal-item-container')][40]")
            driver.execute_script("arguments[0].scrollIntoView();", elemento) 
            
            #clicar no contato
            time.sleep(5)        
            espere_e_clique(driver,By.XPATH,"//div[starts-with(@class,'deal-item-container')][40]")
            
            #clicar whats                
            espere_e_clique (driver,By.XPATH,'//button[@class="whatsapp-button"]')

            #clicar 'enviar mensagem'        
            espere_e_clique(driver,By.XPATH,'/html/body/ion-app/ion-modal/div/whatsapp-sharing/ion-footer/div/div/div[2]/button')
                        
            #obtem os handles das abas
            handles = driver.window_handles
            pag=[]
        # Imprimir os identificadores
            for handle in handles:
                c=handle
                pag.append(handle)
                print(handle)


            
            # Mudar para foco para  janela whatssApp
            driver.switch_to.window(handle)

            
        #em caso de link incorreto        
            page_source = driver.page_source
            if "O link está incorreto. Feche essa janela e tente usar outro link." in page_source:
                time.sleep(2)
                driver.close
                print('Tinha um link incorreto e eu fechei a janela e continuei o serviço')
                #LEMBRE-SE DE ADICIONAR UM BREAK QUANDO TERMINAR O CODIGO PARA QUE ELE CONTINUE A EXECUÇÃO
                break



            #botão de mensagem        
            espere_e_clique(driver,By.XPATH,'//*[@id="action-button"]')
            
            
            # usar whatweb
            espere_e_clique(driver,By.XPATH,'//*[@id="fallback_block"]/div/div/h4[2]/a/span')
            time.sleep(5)

            #Localizar caixa de texto(Tive que usar esta estrutura usando laço while porque a função usando WebDriverWait não funcionou)        
            caixa_de_mensagem = None
            
            while caixa_de_mensagem is None:
                try:
                    caixa_de_mensagem = driver.find_element(By.XPATH, '//*[@id="main"]/footer/div[1]/div/span[2]/div/div[2]/div[1]')
                except NoSuchElementException:
                    time.sleep(3)

            
            #clicar na caixa de texto
            caixa_de_mensagem.click()
            time.sleep(1)
            
            #escrever a mensagem 
            caixa_de_mensagem.send_keys('Ola, Meu nome é Pedro sou corretor da Imobiliria Jaguar')
            time.sleep(1)
            
            #enviar mensagem
            #caixa_de_mensagem.send_keys(Keys.ENTER)
            time.sleep(4)
            
            # fechar aba
            driver.close()
            print('sem novidade meu patrão')
            time.sleep(3)

            #voltar para janela CRM(os handles estão armazenados em uma lista e referenciei o primeiro handle(CRM) com o comando pag[0])
            driver.switch_to.window(pag[0])

            # atualizar contato 
            espere_e_clique(driver, By.XPATH,'//a[contains(text(),"FOLLOW-UP")]')
            time.sleep(10)

            #Voltar para os contatos 
        
            driver.back()

        
        
